apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "flask-hello.fullname" . }}-env
  labels:
    app.kubernetes.io/name: {{ include "flask-hello.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  POSTGRES_HOST: {{ include "postgresql.hostname" . }}
  POSTGRES_PORT: {{ .Values.postgresql.port | quote }}
  POSTGRES_DATABASE: {{ .Values.postgresql.postgresqlDatabase }}
  POSTGRES_USERNAME: {{ .Values.postgresql.postgresqlUsername }}
  POSTGRES_PASSWORD: {{ .Values.postgresql.postgresqlPassword }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-hello.fullname" . }}
spec:
  minReadySeconds: 5
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flask-hello.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "flask-hello.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup $POSTGRES_HOST; do echo waiting for $POSTGRES_HOST; sleep 2; done;']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env

      # initContainers:
      # - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      #   imagePullPolicy: {{ .Values.image.pullPolicy }}
      #   name: {{ .Chart.Name }}-db-migrate
      #   command: ['flask-hello', 'migrate-db']

      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env
        # env:
        # - name: POSTGRES_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: {{ include "postgresql.fullname" . }}
        #       key: postgresql-password

        ports:
        - containerPort: 5000
          name: api
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "flask-hello.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "flask-hello.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}

spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: {{ include "flask-hello.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}


---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ template "flask-hello.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "flask-hello.name" . }}
data:
  postgresql-password: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
