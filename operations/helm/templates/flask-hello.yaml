---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-hello.fullname" . }}
spec:
  minReadySeconds: 5
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "flask-hello.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "flask-hello.labels" . | indent 8 }}
    spec:
      initContainers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-check-installation
        command: ['/venv/bin/flask-hello', 'check']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-check-db-connection
        command: ['/venv/bin/flask-hello', 'check-db']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-db-migrate
        command: ['/venv/bin/flask-hello', 'migrate-db']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "flask-hello.fullname" . }}-secrets
              key: postgresql-password

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-zeromq-connection
        command: ['/venv/bin/flask-hello', 'enqueue', 'hello-world']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env

      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        command: ['flask-hello', 'web']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env
        ports:
        - containerPort: {{ .Values.service.port }}
          protocol: TCP
          name: webapi
        livenessProbe:
          httpGet:
            path: /health
            port: webapi
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: webapi
          initialDelaySeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "flask-hello.fullname" . }}
  labels:
{{ include "flask-hello.labels" . | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      protocol: TCP
      targetPort: webapi
      name: http
  selector:
{{ include "flask-hello.labels" . | indent 4 }}

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "flask-hello.fullname" . }}-zeromq
spec:
  template:
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}-zeromq-connection
        command: ['/venv/bin/flask-hello', 'enqueue', 'hello-world']
        envFrom:
          - configMapRef:
              name: {{ include "flask-hello.fullname" . }}-env

      restartPolicy: Never
  backoffLimit: 4
